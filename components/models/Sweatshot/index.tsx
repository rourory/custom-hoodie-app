"use client";
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/sweatshot.glb -o components/models/sweat.tsx -r public 
*/

import React, { JSX, useEffect } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { Mesh, MeshBasicMaterial, MeshStandardMaterial, Texture } from "three";
import { useFrame } from "@react-three/fiber";
import { easing } from "maath";
import { useModelSettingsStore } from "@/store/customizer";

type GLTFResult = GLTF & {
  nodes: {
    sweatshot: Mesh;
    rubbers: Mesh;
  };
  materials: {
    ClothMaterial: MeshStandardMaterial;
  };
};

export default function Sweatshot(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/models/sweatshot.glb"
  ) as unknown as GLTFResult;

  const { color, image } = useModelSettingsStore();

  const [overlayMaterial, setOverlayMaterial] =
    React.useState<MeshBasicMaterial | null>(null);

  useEffect(() => {
    if (image) {
      const tex = new Texture(image);
      tex.flipY = false;
      tex.needsUpdate = true;

      const newOverlayMaterial = new MeshBasicMaterial({
        map: tex,
        transparent: true,
        depthWrite: false,
        toneMapped: false,
      });
      setOverlayMaterial(newOverlayMaterial);
    }
  }, [image]);

  useFrame((state, delta) => {
    easing.dampC(materials.ClothMaterial.color, color, 0.25, delta);
  });

  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.sweatshot.geometry}
        material={materials.ClothMaterial}
        position={[-0.078, 0, 0]}
      ></mesh>
      {overlayMaterial && (
        <mesh
          geometry={nodes.sweatshot.geometry}
          material={overlayMaterial}
          position={[-0.078, 0, 0]}
        ></mesh>
      )}
      <mesh
        geometry={nodes.rubbers.geometry}
        material={materials.ClothMaterial}
        position={[-0.078, 0, 0]}
      />
    </group>
  );
}

useGLTF.preload("/models/sweatshot.glb");
