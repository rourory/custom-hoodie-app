"use client";

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 .\public\models\mug.glb -o .\components\models\Mug\index.tsx 
*/

import React, { JSX } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useModelSettingsStore } from "@/store/customizer";
import { Mesh, MeshBasicMaterial, MeshStandardMaterial, Texture } from "three";
import { useFrame } from "@react-three/fiber";
import { easing } from "maath";

type GLTFResult = GLTF & {
  nodes: {
    Cylinder: Mesh;
    Cylinder_1: Mesh;
    Handle: Mesh;
    Printable: Mesh;
  };
  materials: {
    Mug_Material: MeshStandardMaterial;
  };
};

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/models/mug.glb"
  ) as unknown as GLTFResult;

  const { color, image } = useModelSettingsStore();

  const [overlayMaterial, setOverlayMaterial] =
    React.useState<MeshBasicMaterial | null>(null);

  React.useEffect(() => {
    if (image) {
      const tex = new Texture(image);
      tex.flipY = false;
      tex.needsUpdate = true;

      const newOverlayMaterial = new MeshBasicMaterial({
        map: tex,
        transparent: true,
        depthWrite: false,
        toneMapped: false,
      });
      setOverlayMaterial(newOverlayMaterial);
    }
  }, [image]);

  useFrame((state, delta) => {
    easing.dampC(materials.Mug_Material.color, color, 0.25, delta);
  });

  return (
    <group {...props} dispose={null} scale={1.5}>
      {overlayMaterial && (
        <mesh geometry={nodes.Printable.geometry} material={overlayMaterial} />
      )}
      <mesh
        geometry={nodes.Printable.geometry}
        material={materials.Mug_Material}
      />
      <mesh
        geometry={nodes.Cylinder.geometry}
        material={materials.Mug_Material}
      />
      <mesh
        geometry={nodes.Cylinder_1.geometry}
        material={nodes.Cylinder_1.material}
      />
      <mesh
        geometry={nodes.Handle.geometry}
        material={materials.Mug_Material}
      />
    </group>
  );
}

useGLTF.preload("/mug.glb");
